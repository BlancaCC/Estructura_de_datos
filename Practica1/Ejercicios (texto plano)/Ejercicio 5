Ejercicio 5

Características:
Ubuntu 16.04
1,8 GiB RAM
Intel® Core™ i7-4700MQ CPU @ 2.40GHz


Código:

void ordenar(int *v, int n) {

  bool cambio=true;

  for (int i=0; i<n-1 && cambio; i++) {

    cambio=false;

    for (int j=0; j<n-i-1; j++)

      if (v[j]>v[j+1]) {

        cambio=true;
        int aux = v[j];
        v[j] = v[j+1];
        v[j+1] = aux;
      }
    }
  }


Cálculo de la eficiencia teórica:

En cada línea de código se producen las siguientes operaciones elementales:

Línea 2: 1 o.e. inicialización booleana
Línea 3: 4 o.e. inicial. "i", comparación "<", resta "n-1", incremento "i++"
Línea 4: 1 o.e. asignación booleana
Línea 5: 5 o.e. inicial. "j", comp. "<", doble resta "n-i-1", incremento "j++"
Línea 6: 4 o.e. accesos a v[j] y v[j+1], suma "j+1", comp. ">"
Línea 7: 1 o.e. asign. bool.
Línea 8: 2 o.e. inicial. "aux", acceso a v[j]
Línea 9: 4 o.e. acceso a v[j] y v[j+1], suma "j+1", asignación
Línea 10: 3 o.e. acceso a v[j+1], suma "j+1", asignación

*Las líneas 7-10 no sucederían en el mejor de los casos, cuando el vector está ordenado
